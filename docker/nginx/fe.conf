resolver 127.0.0.11;

# Debug routing maps - needs to be defined before server blocks
map $cookie_XDEBUG_SESSION $backend_container {
    default php_monadungeon;
    PHPSTORM phpx_monadungeon;
}

map $http_host $port {
    default 80;
    "~^[^\:]+:(?<p>\d+)$" $p;
}

# Main server block to handle frontend and API requests
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    listen 443 ssl http2;
    listen [::]:443 ssl;
    
    server_name sf.sf _;
    client_max_body_size 50m;
    
    # SSL Configuration
    ssl_prefer_server_ciphers on;
    ssl_certificate /etc/nginx/ssl/monadungeon.local.cert;
    ssl_certificate_key /etc/nginx/ssl/monadungeon.local.key;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1h;
    ssl_session_tickets off;
    ssl_buffer_size 4k;
    ssl_protocols TLSv1.1 TLSv1.2;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
    add_header Strict-Transport-Security "max-age=31536000" always;
    
    # Timeouts
    proxy_read_timeout 300;
    proxy_connect_timeout 300;
    proxy_send_timeout 300;
    
    # Frontend - Serve Vue.js application
    location / {
        proxy_pass http://frontend:5173;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $port;
        proxy_cache_bypass $http_upgrade;
    }
    
    # Backend - Proxy API requests to PHP backend with container selection
    location /api {
        # Using backend_container variable for dynamic container selection
        proxy_pass http://$backend_container:8080$request_uri;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $port;
        proxy_set_header X-Forwarded-Host $host;
    }
    
    # Block access to PHP files directly
    location ~ \.php$ {
        return 404;
    }
    
    # Logging
    error_log /var/log/nginx/project_error.log;
    access_log /var/log/nginx/project_access.log;
}